package com.mycompany.accounting;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.Date;

public class moreOptionForJournal extends javax.swing.JFrame {
    
    
    String formattedStartDate;
    double assetAmount;
    double liabilityAmount;
    double ownerCapitalAmount;
    double assetAmount1;
    String description;




   
    
    public moreOptionForJournal() {
        initComponents();
        displayJournalEntries();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        date = new com.toedter.calendar.JDateChooser();
        ButtAdd = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        textAssetAmount = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        ComboAsset = new javax.swing.JComboBox<>();
        RaButtAccPay = new javax.swing.JRadioButton();
        RaButtNotePay = new javax.swing.JRadioButton();
        RaButtOwnercapital = new javax.swing.JRadioButton();
        RabuttRevenues = new javax.swing.JRadioButton();
        RaButtOwnerDrawing = new javax.swing.JRadioButton();
        RaButtExpance = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        explanationText = new javax.swing.JTextArea();
        textLiabilityAmount = new javax.swing.JTextField();
        textOCAmount = new javax.swing.JTextField();
        anotherAsset = new javax.swing.JCheckBox();
        anotherAssetPanel = new javax.swing.JPanel();
        textAssetAmount1 = new javax.swing.JTextField();
        ComboAsset1 = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();



        //setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel3.setText(" Enter the starting date :");

        ButtAdd.setText("Add");
        ButtAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtAddActionPerformed(evt);
            }
        });



        jLabel2.setText("Inter the  amount :");

        jLabel7.setText("Select the option : ");

        ComboAsset.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cash ", "Accounts Receivable ", "Supplies ", "Equipment " }));

        RaButtAccPay.setText("Accounts Payable ");

        RaButtNotePay.setText("Note Payable ");

        RaButtOwnercapital.setText("Owner's Capital");

        RabuttRevenues.setText("Revenues");

        RaButtOwnerDrawing.setText("Owner's Drawing");

        RaButtExpance.setText("Expense");

        jLabel4.setText("Explanation :");

        explanationText.setColumns(20);
        explanationText.setRows(5);
        jScrollPane2.setViewportView(explanationText);

        anotherAsset.setText("Another asset");

        ComboAsset1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cash ", "Accounts Receivable ", "Supplies ", "Equipment " }));

        jLabel8.setText("Select the assets : ");

        jLabel5.setText("insert another asset :");

        javax.swing.GroupLayout anotherAssetPanelLayout = new javax.swing.GroupLayout(anotherAssetPanel);
        anotherAssetPanel.setLayout(anotherAssetPanelLayout);
        anotherAssetPanelLayout.setHorizontalGroup(
                anotherAssetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(anotherAssetPanelLayout.createSequentialGroup()
                                .addGroup(anotherAssetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel8)
                                        .addComponent(jLabel5))
                                .addGap(35, 35, 35)
                                .addGroup(anotherAssetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(ComboAsset1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(textAssetAmount1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 12, Short.MAX_VALUE))
        );
        anotherAssetPanelLayout.setVerticalGroup(
                anotherAssetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(anotherAssetPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(anotherAssetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel5)
                                        .addComponent(textAssetAmount1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(anotherAssetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel8)
                                        .addComponent(ComboAsset1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(jLabel2)
                                                                        .addComponent(jLabel7))
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(ComboAsset, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                                .addComponent(textAssetAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                                                        .addComponent(jLabel3)
                                                                        .addGap(18, 18, 18)
                                                                        .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                        .addComponent(anotherAsset, javax.swing.GroupLayout.Alignment.TRAILING))
                                                .addGap(36, 36, 36)
                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(RaButtNotePay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(RaButtAccPay)
                                                        .addComponent(textLiabilityAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addComponent(anotherAssetPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(jLabel4)
                                                .addGap(74, 74, 74)
                                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(47, 47, 47)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGap(105, 105, 105)
                                                .addComponent(ButtAdd))
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGap(24, 24, 24)
                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(RaButtExpance)
                                                        .addComponent(RabuttRevenues)
                                                        .addComponent(RaButtOwnercapital)
                                                        .addComponent(RaButtOwnerDrawing)
                                                        .addComponent(textOCAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addContainerGap(27, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel3))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(textOCAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(RaButtOwnercapital)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(RabuttRevenues)
                                                .addGap(12, 12, 12)
                                                .addComponent(RaButtOwnerDrawing)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(RaButtExpance)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel2)
                                                        .addComponent(textAssetAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(textLiabilityAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                                .addComponent(RaButtAccPay)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(RaButtNotePay))
                                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                                        .addComponent(jLabel7)
                                                                        .addComponent(ComboAsset, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addGap(18, 18, 18)
                                                                .addComponent(anotherAsset)))
                                                .addGap(18, 18, 18)
                                                .addComponent(anotherAssetPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(15, 15, 15)))
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(ButtAdd, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel4)
                                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap(47, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(14, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())
        );

        pack();
    }// </editor-fold>      

    private void input() {
        // Date Entry Part
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        Date entryDate = date.getDate();

        if (entryDate != null) {
            formattedStartDate = sdf.format(entryDate);
            System.out.println("Entry Date: " + formattedStartDate);
        } else {
            JOptionPane.showMessageDialog(null, "Please select a date!", "Warning", JOptionPane.WARNING_MESSAGE);
            return; // Stop execution if no date is selected
        }

        // Amount Entry Part
        try {
            // Validate and parse numeric values
            assetAmount = validateAndParse(textAssetAmount.getText(), "Asset Amount");
            liabilityAmount = validateAndParse(textLiabilityAmount.getText(), "Liability Amount");
            ownerCapitalAmount = validateAndParse(textOCAmount.getText(), "Owner Capital Amount");

            System.out.println("Asset Amount: " + assetAmount);
            System.out.println("Liability Amount: " + liabilityAmount);
            System.out.println("Owner Capital Amount: " + ownerCapitalAmount);

            // Parse assetAmount1 separately (if applicable)
            assetAmount1 = validateAndParse(textAssetAmount1.getText(), "Asset Amount1");
            System.out.println("Asset Amount1: " + assetAmount1);

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Please enter a valid numeric amount!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Description Entry Part
        description = explanationText.getText();
    }

    /**
     * Validates and parses a string to a double.
     * @param text The input text from a JTextField.
     * @param fieldName The name of the field for error messages.
     * @return The parsed double value.
     * @throws NumberFormatException If the input is invalid.
     */
    private double validateAndParse(String text, String fieldName) throws NumberFormatException {
        if (text == null || text.trim().isEmpty()) {
            //JOptionPane.showMessageDialog(null, fieldName + " cannot be empty!", "Warning", JOptionPane.WARNING_MESSAGE);
            throw new NumberFormatException("Empty input for " + fieldName);
        }
        return Double.parseDouble(text.trim());
    }


    int assetIndex;
    double amount;
    Journal_1 journal_1 = new Journal_1();
    private void insertJournalEntry() {
        Connection conn = null;
        PreparedStatement pstmt = null;
        ResultSet rs = null;

        try {
            if (formattedStartDate == null || formattedStartDate.isEmpty()) {
                JOptionPane.showMessageDialog(null, "❌ Date cannot be null!", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            java.sql.Date sqlDate = java.sql.Date.valueOf(formattedStartDate);
            assetIndex = ComboAsset.getSelectedIndex() + 1;
            conn = DatabaseConnection.getConnection();
            conn.setAutoCommit(false); // Enable transaction control

            String sql = "INSERT INTO general_journal_2 (date, account_title, reference, debit, credit, explanation) VALUES (?, ?, ?, ?, ?, ?)";

            // 🔹 Insert Asset Entry
            pstmt = conn.prepareStatement(sql);
            pstmt.setDate(1, sqlDate);
            amount = Math.abs(assetAmount);

            switch (assetIndex) {
                case 1 -> { pstmt.setString(2, "Cash"); pstmt.setInt(3, 101); }
                case 2 -> { pstmt.setString(2, "Account Receivable"); pstmt.setInt(3, 102); }
                case 3 -> { pstmt.setString(2, "Equipment"); pstmt.setInt(3, 103); }
                default -> throw new SQLException("❌ Invalid asset index: " + assetIndex);
            }

            pstmt.setDouble(4, assetAmount > 0 ? amount : 0);
            pstmt.setDouble(5, assetAmount < 0 ? amount : 0);
            pstmt.setNull(6, Types.VARCHAR);
            pstmt.executeUpdate();

            // 🔹 Insert Liability Entry
            pstmt = conn.prepareStatement(sql);
            pstmt.setDate(1, sqlDate);
            amount = Math.abs(liabilityAmount);

            if (RaButtAccPay.isSelected()) {
                pstmt.setString(2, "Account Payable");
                pstmt.setInt(3, 471);
            } else if (RaButtNotePay.isSelected()) {
                pstmt.setString(2, "Note Payable");
                pstmt.setInt(3, 498);
            } else {
                throw new SQLException("❌ No liability option selected!");
            }

            pstmt.setDouble(4, liabilityAmount < 0 ? amount : 0);
            pstmt.setDouble(5, liabilityAmount > 0 ? amount : 0);
            pstmt.setNull(6, Types.VARCHAR);
            pstmt.executeUpdate();

            // 🔹 Insert Equity/Revenue/Expense Entry
            pstmt = conn.prepareStatement(sql);
            pstmt.setDate(1, sqlDate);
            amount = Math.abs(ownerCapitalAmount);

            if (RaButtOwnercapital.isSelected()) {
                pstmt.setString(2, "Owner's Equity"); pstmt.setInt(3, 301);
                pstmt.setDouble(4, 0); pstmt.setDouble(5, amount);
            } else if (RabuttRevenues.isSelected()) {
                pstmt.setString(2, "Revenues"); pstmt.setInt(3, 380);
                pstmt.setDouble(4, 0); pstmt.setDouble(5, amount);
            } else if (RaButtExpance.isSelected()) {
                pstmt.setString(2, "Expense"); pstmt.setInt(3, 371);
                pstmt.setDouble(4, amount); pstmt.setDouble(5, 0);
            } else if (RaButtOwnerDrawing.isSelected()) {
                pstmt.setString(2, "Drawing"); pstmt.setInt(3, 306);
                pstmt.setDouble(4, amount); pstmt.setDouble(5, 0);
            } else {
                throw new SQLException("❌ No equity/revenue/expense option selected!");
            }

            pstmt.setNull(6, Types.VARCHAR);
            pstmt.executeUpdate();

            conn.commit();
            System.out.println("✅ Journal entry added successfully!");

            // 🔹 Update JTable
            String display = "SELECT * FROM general_journal_2";
            pstmt = conn.prepareStatement(display);
            rs = pstmt.executeQuery();

            DefaultTableModel model = (DefaultTableModel) journal_1.general_jornal_2.getModel();
            model.setRowCount(0);

            while (rs.next()) {
                model.addRow(new Object[]{
                        rs.getDate("date"), rs.getString("account_title"), rs.getInt("reference"),
                        rs.getBigDecimal("debit"), rs.getBigDecimal("credit"), rs.getString("explanation")
                });
            }

        } catch (SQLException e) {
            if (conn != null) {
                try { conn.rollback(); } catch (SQLException rollbackEx) { rollbackEx.printStackTrace(); }
            }
            JOptionPane.showMessageDialog(null, "❌ SQL Error: " + e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
        } catch (IllegalArgumentException e) {
            JOptionPane.showMessageDialog(null, "❌ Error: " + e.getMessage(), "Input Error", JOptionPane.WARNING_MESSAGE);
        } finally {
            try {
                if (rs != null) rs.close();
                if (pstmt != null) pstmt.close();
                if (conn != null) conn.close();
            } catch (SQLException closeEx) { closeEx.printStackTrace(); }
        }
    }


    private void displayJournalEntries() {
        Connection conn = null;
        PreparedStatement pstmt = null;
        ResultSet rs = null;

        try {
            conn = DatabaseConnection.getConnection();
            if (conn == null) {
                System.err.println("❌ Database connection failed!");
                return;
            }

            String sql = "SELECT * FROM general_journal_2";
            pstmt = conn.prepareStatement(sql);
            rs = pstmt.executeQuery();

            // Debugging: Check if result set is returning any data
            if (!rs.next()) {
                System.out.println("❌ No data found in the database!");
                return;
            }

            // Get the table model
            DefaultTableModel model = (DefaultTableModel) journal_1.general_jornal_2.getModel();
            model.setRowCount(0);  // Clear existing data

            // Loop through the result set and add data to the table
            do {
                model.addRow(new Object[]{
                        rs.getDate("date"),
                        rs.getString("account_title"),
                        rs.getInt("reference"),
                        rs.getBigDecimal("debit"),
                        rs.getBigDecimal("credit"),
                        rs.getString("explanation")
                });
            } while (rs.next());  // Use do-while to ensure at least one iteration

            // Ensure the table is updated
            SwingUtilities.invokeLater(new Runnable() {
                @Override
                public void run() {
                    journal_1.general_jornal_2.revalidate();
                    journal_1.general_jornal_2.repaint();
                }
            });

            System.out.println("✅ Journal entries displayed successfully!");

        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "❌ Error: " + e.getMessage(), "SQL Error", JOptionPane.ERROR_MESSAGE);
        } finally {
            try {
                if (rs != null) rs.close();
                if (pstmt != null) pstmt.close();
                if (conn != null) conn.close();
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }



    private void ButtAddActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        input();
        insertJournalEntry();
        displayJournalEntries();

        dispose();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(moreOptionForJournal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(moreOptionForJournal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(moreOptionForJournal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(moreOptionForJournal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new moreOptionForJournal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify
    private javax.swing.JButton ButtAdd;
    private javax.swing.JComboBox<String> ComboAsset;
    private javax.swing.JComboBox<String> ComboAsset1;
    private javax.swing.JRadioButton RaButtAccPay;
    private javax.swing.JRadioButton RaButtNotePay;
    private javax.swing.JRadioButton RaButtOwnerDrawing;
    private javax.swing.JRadioButton RaButtOwnercapital;
    private javax.swing.JRadioButton RabuttRevenues;
    private javax.swing.JCheckBox anotherAsset;
    private javax.swing.JPanel anotherAssetPanel;
    private com.toedter.calendar.JDateChooser date;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButton RaButtExpance;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea explanationText;
    private javax.swing.JTextField textAssetAmount;
    private javax.swing.JTextField textAssetAmount1;
    private javax.swing.JTextField textLiabilityAmount;
    private javax.swing.JTextField textOCAmount;
    // End of variables declaration
}
